/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
/* tslint:disable */

import '@stencil/core';

declare global {
    interface HTMLElement {
        componentOnReady?: () => Promise<this | null>;
    }

    interface HTMLStencilElement extends HTMLElement {
        componentOnReady(): Promise<this>;

        forceUpdate(): void;
    }

    interface HTMLAttributes {}

    namespace StencilComponents {
        interface UiHeading {
            large: boolean;
            medium: boolean;
            small: boolean;
            xlarge: boolean;
            xsmall: boolean;
        }
    }

    interface HTMLUiHeadingElement
        extends StencilComponents.UiHeading,
            HTMLStencilElement {}

    var HTMLUiHeadingElement: {
        prototype: HTMLUiHeadingElement;
        new (): HTMLUiHeadingElement;
    };

    namespace JSX {
        interface Element {}
        export interface IntrinsicElements {
            'ui-heading': JSXElements.UiHeadingAttributes;
        }
    }

    namespace JSXElements {
        export interface UiHeadingAttributes extends HTMLAttributes {
            large?: boolean;
            medium?: boolean;
            small?: boolean;
            xlarge?: boolean;
            xsmall?: boolean;
        }
    }

    interface HTMLElementTagNameMap {
        'ui-heading': HTMLUiHeadingElement;
    }

    interface ElementTagNameMap {
        'ui-heading': HTMLUiHeadingElement;
    }
}
declare global {
    namespace JSX { interface StencilJSX {} }
}

export declare function defineCustomElements(window: any): void;
